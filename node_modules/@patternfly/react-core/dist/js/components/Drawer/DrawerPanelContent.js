"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const drawer_1 = tslib_1.__importDefault(require("@patternfly/react-styles/css/components/Drawer/drawer"));
const react_styles_1 = require("@patternfly/react-styles");
const Drawer_1 = require("./Drawer");
exports.DrawerPanelContent = (_a) => {
    var { className = '', children, hasNoBorder = false, width, widthOnLg, widthOnXl, widthOn2Xl } = _a, props = tslib_1.__rest(_a, ["className", "children", "hasNoBorder", "width", "widthOnLg", "widthOnXl", "widthOn2Xl"]);
    return (React.createElement(Drawer_1.DrawerContext.Consumer, null, ({ isExpanded }) => (React.createElement("div", Object.assign({ className: react_styles_1.css(drawer_1.default.drawerPanel, hasNoBorder && drawer_1.default.modifiers.noBorder, width && drawer_1.default.modifiers[`width_${width}`], widthOnLg && drawer_1.default.modifiers[`width_${widthOnLg}OnLg`], widthOnXl && drawer_1.default.modifiers[`width_${widthOnXl}OnXl`], widthOn2Xl && drawer_1.default.modifiers[`width_${widthOn2Xl}On_2xl`], className), hidden: !isExpanded, "aria-hidden": !isExpanded, "aria-expanded": isExpanded }, props), children))));
};
//# sourceMappingURL=DrawerPanelContent.js.map