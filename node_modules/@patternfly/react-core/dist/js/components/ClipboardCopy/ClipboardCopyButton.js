"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const clipboard_copy_1 = tslib_1.__importDefault(require("@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy"));
const react_styles_1 = require("@patternfly/react-styles");
const copy_icon_1 = tslib_1.__importDefault(require("@patternfly/react-icons/dist/js/icons/copy-icon"));
const Tooltip_1 = require("../Tooltip");
exports.ClipboardCopyButton = (_a) => {
    var { onClick, className = '', exitDelay = 100, entryDelay = 100, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children } = _a, props = tslib_1.__rest(_a, ["onClick", "className", "exitDelay", "entryDelay", "maxWidth", "position", 'aria-label', "id", "textId", "children"]);
    return (React.createElement(Tooltip_1.Tooltip, { trigger: "mouseenter focus click", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, content: React.createElement("div", null, children) },
        React.createElement("button", Object.assign({ type: "button", onClick: onClick, className: react_styles_1.css(clipboard_copy_1.default.clipboardCopyGroupCopy, className), "aria-label": ariaLabel, id: id, "aria-labelledby": `${id} ${textId}` }, props),
            React.createElement(copy_icon_1.default, null))));
};
//# sourceMappingURL=ClipboardCopyButton.js.map