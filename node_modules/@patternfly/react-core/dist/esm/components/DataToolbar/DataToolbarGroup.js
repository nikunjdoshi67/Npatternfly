import { __rest } from "tslib";
import * as React from 'react';
import styles from '@patternfly/react-styles/css/components/DataToolbar/data-toolbar';
import { css } from '@patternfly/react-styles';
import { formatBreakpointMods, toCamel } from '../../helpers/util';
export var DataToolbarGroupVariant;
(function (DataToolbarGroupVariant) {
    DataToolbarGroupVariant["filter-group"] = "filter-group";
    DataToolbarGroupVariant["icon-button-group"] = "icon-button-group";
    DataToolbarGroupVariant["button-group"] = "button-group";
})(DataToolbarGroupVariant || (DataToolbarGroupVariant = {}));
class DataToolbarGroupWithRef extends React.Component {
    render() {
        const _a = this.props, { breakpointMods, className, variant, children, innerRef } = _a, props = __rest(_a, ["breakpointMods", "className", "variant", "children", "innerRef"]);
        return (React.createElement("div", Object.assign({ className: css(styles.dataToolbarGroup, variant && styles.modifiers[toCamel(variant)], formatBreakpointMods(breakpointMods, styles), className) }, props, { ref: innerRef }), children));
    }
}
DataToolbarGroupWithRef.defaultProps = {
    breakpointMods: []
};
export const DataToolbarGroup = React.forwardRef((props, ref) => (React.createElement(DataToolbarGroupWithRef, Object.assign({}, props, { innerRef: ref }))));
//# sourceMappingURL=DataToolbarGroup.js.map