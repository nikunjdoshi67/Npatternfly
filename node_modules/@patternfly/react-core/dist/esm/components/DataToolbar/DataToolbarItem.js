import { __rest } from "tslib";
import * as React from 'react';
import styles from '@patternfly/react-styles/css/components/DataToolbar/data-toolbar';
import { css } from '@patternfly/react-styles';
import { formatBreakpointMods, toCamel } from '../../helpers/util';
export var DataToolbarItemVariant;
(function (DataToolbarItemVariant) {
    DataToolbarItemVariant["separator"] = "separator";
    DataToolbarItemVariant["bulk-select"] = "bulk-select";
    DataToolbarItemVariant["overflow-menu"] = "overflow-menu";
    DataToolbarItemVariant["pagination"] = "pagination";
    DataToolbarItemVariant["search-filter"] = "search-filter";
    DataToolbarItemVariant["label"] = "label";
    DataToolbarItemVariant["chip-group"] = "chip-group";
})(DataToolbarItemVariant || (DataToolbarItemVariant = {}));
export const DataToolbarItem = (_a) => {
    var { className, variant, breakpointMods = [], id, children } = _a, props = __rest(_a, ["className", "variant", "breakpointMods", "id", "children"]);
    const labelVariant = variant === 'label';
    return (React.createElement("div", Object.assign({ className: css(styles.dataToolbarItem, variant &&
            styles.modifiers[toCamel(variant)], formatBreakpointMods(breakpointMods, styles), className) }, (labelVariant && { 'aria-hidden': true }), { id: id }, props), children));
};
//# sourceMappingURL=DataToolbarItem.js.map