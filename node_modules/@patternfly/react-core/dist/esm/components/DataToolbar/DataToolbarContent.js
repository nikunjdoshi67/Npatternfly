import { __rest } from "tslib";
import * as React from 'react';
import styles from '@patternfly/react-styles/css/components/DataToolbar/data-toolbar';
import { css } from '@patternfly/react-styles';
import { DataToolbarContentContext } from './DataToolbarUtils';
import { formatBreakpointMods } from '../../helpers/util';
import { DataToolbarExpandableContent } from './DataToolbarExpandableContent';
export class DataToolbarContent extends React.Component {
    constructor() {
        super(...arguments);
        this.expandableContentRef = React.createRef();
        this.chipContainerRef = React.createRef();
    }
    render() {
        const _a = this.props, { className, children, isExpanded, toolbarId, breakpointMods, clearAllFilters, showClearFiltersButton, clearFiltersButtonText } = _a, props = __rest(_a, ["className", "children", "isExpanded", "toolbarId", "breakpointMods", "clearAllFilters", "showClearFiltersButton", "clearFiltersButtonText"]);
        const expandableContentId = `${toolbarId}-expandable-content-${DataToolbarContent.currentId++}`;
        return (React.createElement("div", Object.assign({ className: css(styles.dataToolbarContent, formatBreakpointMods(breakpointMods, styles), className) }, props),
            React.createElement(DataToolbarContentContext.Provider, { value: {
                    expandableContentRef: this.expandableContentRef,
                    expandableContentId,
                    chipContainerRef: this.chipContainerRef
                } },
                React.createElement("div", { className: css(styles.dataToolbarContentSection) }, children),
                React.createElement(DataToolbarExpandableContent, { id: expandableContentId, isExpanded: isExpanded, expandableContentRef: this.expandableContentRef, chipContainerRef: this.chipContainerRef, clearAllFilters: clearAllFilters, showClearFiltersButton: showClearFiltersButton, clearFiltersButtonText: clearFiltersButtonText }))));
    }
}
DataToolbarContent.currentId = 0;
DataToolbarContent.defaultProps = {
    isExpanded: false,
    breakpointMods: [],
    showClearFiltersButton: false
};
//# sourceMappingURL=DataToolbarContent.js.map