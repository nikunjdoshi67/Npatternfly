import { __rest } from "tslib";
import * as React from 'react';
import { css } from '@patternfly/react-styles';
import styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';
export const OptionsMenuToggleWithText = (_a) => {
    var { parentId = '', toggleText, toggleTextClassName = '', toggleButtonContents, toggleButtonContentsClassName = '', onToggle = () => null, isOpen = false, isPlain = false, isHovered = false, isActive = false, isFocused = false, isDisabled = false, 
    /* eslint-disable @typescript-eslint/no-unused-vars */
    'aria-haspopup': ariaHasPopup, parentRef, onEnter, 
    /* eslint-enable @typescript-eslint/no-unused-vars */
    'aria-label': ariaLabel = 'Options menu' } = _a, props = __rest(_a, ["parentId", "toggleText", "toggleTextClassName", "toggleButtonContents", "toggleButtonContentsClassName", "onToggle", "isOpen", "isPlain", "isHovered", "isActive", "isFocused", "isDisabled", 'aria-haspopup', "parentRef", "onEnter", 'aria-label']);
    return (React.createElement("div", Object.assign({ className: css(styles.optionsMenuToggle, styles.modifiers.text, isPlain && styles.modifiers.plain, isHovered && styles.modifiers.hover, isActive && styles.modifiers.active, isFocused && styles.modifiers.focus, isDisabled && styles.modifiers.disabled) }, props),
        React.createElement("span", { className: css(styles.optionsMenuToggleText, toggleTextClassName) }, toggleText),
        React.createElement("button", { className: css(styles.optionsMenuToggleButton, toggleButtonContentsClassName), id: `${parentId}-toggle`, "aria-haspopup": "listbox", "aria-label": ariaLabel, "aria-expanded": isOpen, onClick: () => onToggle(!isOpen) }, toggleButtonContents)));
};
//# sourceMappingURL=OptionsMenuToggleWithText.js.map